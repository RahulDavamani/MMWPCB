model User {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   email      String   @unique
   firstName  String
   lastName   String
   phone      String
   profilePic String?
   role       UserRole

   accounts Account[]
   sessions Session[]
   orders   Order[]
}

enum UserRole {
   ADMIN
   USER
}

model Account {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   provider      String
   providerId    String?
   emailVerified Boolean?
   passwordHash  String?

   userId String
   user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Session {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   expiresAt  DateTime
   profilePic String?
   cartCount  Int

   userId String
   user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}
