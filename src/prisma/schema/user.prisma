model User {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   email      String   @unique
   firstName  String
   lastName   String
   phone      String
   profilePic String?
   role       UserRole

   accounts               Account[]
   sessions               Session[]
   orders                 Order[]
   addresses              Address[]
   orderReviewMessages    OrderReviewMessage[]
   questionLikes          QuestionLike[]
   questionComments       QuestionComment[]
   questionCommentReplies QuestionCommentReply[]
}

enum UserRole {
   ADMIN
   USER
}

model Account {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   provider      String
   providerId    String?
   emailVerified Boolean?
   passwordHash  String?

   userId String
   user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Session {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   expiresAt  DateTime
   profilePic String?

   userId String
   user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Address {
   id        String   @id @default(nanoid())
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   name         String
   phone        String
   addressLine1 String
   addressLine2 String
   city         String
   state        String
   country      String
   postalCode   String

   userId                 String
   user                   User                   @relation(references: [id], fields: [userId], onDelete: Cascade)
   orderDeliveryAddresses OrderDeliveryAddress[]
}
